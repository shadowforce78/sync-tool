name: Build and Release

on:
  push:
    branches:
      - main  # Déclenche le workflow à chaque push sur la branche main

permissions:
  contents: write  # Nécessaire pour créer des releases et pousser des tags

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Define version
        id: version
        run: echo "VERSION=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          cd client/cli
          go mod tidy
          cd ../..
          cd client
          go mod tidy

      # Compile CLI pour Windows
      - name: Build CLI Client for Windows
        run: |
          cd client/cli
          GOOS=windows GOARCH=amd64 go build -o ../../SushiSyncCLI-windows-amd64.exe -ldflags "-X main.version=${{ env.VERSION }}"
        env:
          CGO_ENABLED: 0

      # Compile CLI pour Linux
      - name: Build CLI Client for Linux
        run: |
          cd client/cli
          GOOS=linux GOARCH=amd64 go build -o ../../SushiSyncCLI-linux-amd64 -ldflags "-X main.version=${{ env.VERSION }}"
        env:
          CGO_ENABLED: 0

      # Compile CLI pour macOS
      - name: Build CLI Client for macOS
        run: |
          cd client/cli
          GOOS=darwin GOARCH=amd64 go build -o ../../SushiSyncCLI-darwin-amd64 -ldflags "-X main.version=${{ env.VERSION }}"
        env:
          CGO_ENABLED: 0

      # Compile GUI pour Windows
      - name: Build GUI Client for Windows
        run: |
          cd client
          GOOS=windows GOARCH=amd64 go build -tags nocgo -o ../SushiSyncGUI-windows-amd64.exe
        env:
          CGO_ENABLED: 0

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Build ${{ env.VERSION }}
          tag_name: build-${{ env.VERSION }}
          draft: false
          prerelease: true
          files: |
            SushiSyncCLI-windows-amd64.exe
            SushiSyncCLI-linux-amd64
            SushiSyncCLI-darwin-amd64
            SushiSyncGUI-windows-amd64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

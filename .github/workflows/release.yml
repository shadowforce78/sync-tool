name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Déclenche le workflow uniquement quand un tag version est poussé

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest  # Utilise un runner Linux qui est plus léger et rapide
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Extract tag version
        id: tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          cd client/cli
          go mod tidy

      # Compile pour Windows
      - name: Build CLI Client for Windows
        run: |
          cd client/cli
          GOOS=windows GOARCH=amd64 go build -o ../../SushiSyncCLI-windows-amd64.exe -ldflags "-X main.version=${{ env.VERSION }}"
        env:
          CGO_ENABLED: 0

      # Compile pour Linux
      - name: Build CLI Client for Linux
        run: |
          cd client/cli
          GOOS=linux GOARCH=amd64 go build -o ../../SushiSyncCLI-linux-amd64 -ldflags "-X main.version=${{ env.VERSION }}"
        env:
          CGO_ENABLED: 0

      # Compile pour macOS
      - name: Build CLI Client for macOS
        run: |
          cd client/cli
          GOOS=darwin GOARCH=amd64 go build -o ../../SushiSyncCLI-darwin-amd64 -ldflags "-X main.version=${{ env.VERSION }}"
        env:
          CGO_ENABLED: 0

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false
          files: |
            SushiSyncCLI-windows-amd64.exe
            SushiSyncCLI-linux-amd64
            SushiSyncCLI-darwin-amd64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
